// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
	DMux8Way(in=load, sel=address[9..11], a=lram0, b=lram1, c=lram2, d=lram3, e=lram4, f=lram5, g=lram6, h=lram7);
    RAM512(in=in, address=address[0..8], load=lram0, out=ram0out);
    RAM512(in=in, address=address[0..8], load=lram1, out=ram1out);
    RAM512(in=in, address=address[0..8], load=lram2, out=ram2out);
    RAM512(in=in, address=address[0..8], load=lram3, out=ram3out);
    RAM512(in=in, address=address[0..8], load=lram4, out=ram4out);
    RAM512(in=in, address=address[0..8], load=lram5, out=ram5out);
    RAM512(in=in, address=address[0..8], load=lram6, out=ram6out);
    RAM512(in=in, address=address[0..8], load=lram7, out=ram7out);

    Mux8Way16(a=ram0out, sel=address[9..11], b=ram1out, c=ram2out, d=ram3out, e=ram4out, f=ram5out, g=ram6out, h=ram7out, out=out);
}
