// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
	// in: dmux load
	DMux8Way(in=load, sel=address, a=lreg0, b=lreg1, c=lreg2, d=lreg3, e=lreg4, f=lreg5, g=lreg6, h=lreg7);
	Register(in=in, load=lreg0, out=reg0out);
	Register(in=in, load=lreg1, out=reg1out);
	Register(in=in, load=lreg2, out=reg2out);
	Register(in=in, load=lreg3, out=reg3out);
	Register(in=in, load=lreg4, out=reg4out);
	Register(in=in, load=lreg5, out=reg5out);
	Register(in=in, load=lreg6, out=reg6out);
	Register(in=in, load=lreg7, out=reg7out);

    // out: mux register outputs
    Mux8Way16(a=reg0out, sel=address, b=reg1out, c=reg2out, d=reg3out, e=reg4out, f=reg5out, g=reg6out, h=reg7out, out=out);
}
